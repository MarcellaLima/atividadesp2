import random
import time

def busca_sequencial(lista, alvo):
    for i in range(len(lista)):
        if lista[i] == alvo:
            return i
    return -1

def busca_binaria(lista, alvo):
    inicio = 0
    fim = len(lista) - 1
    while inicio <= fim:
        meio = (inicio + fim) // 2
        if lista[meio] == alvo:
            return meio
        elif lista[meio] < alvo:
            inicio = meio + 1
        else:
            fim = meio - 1
    return -1

lista = random.sample(range(1, 2_000_000), 1_000_000)
alvo = random.choice(lista)

inicio = time.time()
busca_sequencial(lista, alvo)
fim = time.time()
tempo_seq = fim - inicio

lista.sort()
inicio = time.time()
busca_binaria(lista, alvo)
fim = time.time()
tempo_bin = fim - inicio

print("Compara√ß√£o de desempenho:")
print(f"Tamanho da lista: {len(lista):,} elementos")
print(f"Elemento procurado: {alvo}")
print(f"Tempo busca sequencial: {tempo_seq:.6f} segundos")
print(f"Tempo busca bin√°ria: {tempo_bin:.6f} segundos")

if tempo_seq > tempo_bin:
    print("‚Üí Busca bin√°ria foi mais r√°pida!")
else:
    print("‚Üí Busca sequencial foi mais r√°pida).")


#N√≠vel 1 ‚Äì Fundamentos

import time

def busca_linear(lista, alvo):
    for i in range(len(lista)):
        if lista[i] == alvo:
            return i  
    return -1  


def contar_ocorrencias(lista, alvo):
    contador = 0
    for elemento in lista:
        if elemento == alvo:
            contador += 1
    return contador

def maior_numero(lista):
    maior = lista[0]
    for elemento in lista:
        if elemento > maior:
            maior = elemento
    return maior

def menor_numero(lista):
    menor = lista[0]
    for elemento in lista:
        if elemento < menor:
            menor = elemento
    return menor

def busca_binaria(lista, alvo):
    inicio = 0
    fim = len(lista) - 1
    while inicio <= fim:
        meio = (inicio + fim) // 2
        if lista[meio] == alvo:
            return meio
        elif lista[meio] < alvo:
            inicio = meio + 1
        else:
            fim = meio - 1
    return -1

lista = [10, 23, 4, 56, 78, 23, 4, 90, 15]
alvo = 23

print("Lista:", lista)
print("N√∫mero alvo:", alvo)

inicio = time.time()
indice = busca_linear(lista, alvo)
fim = time.time()
print("\n1. Busca Linear Simples:")
if indice != -1:
    print(f"Elemento encontrado no √≠ndice {indice}")
else:
    print("Elemento n√£o encontrado.")
print("Tempo:", fim - inicio, "segundos")

inicio = time.time()
ocorrencias = contar_ocorrencias(lista, alvo)
fim = time.time()
print("\n2. Contar Ocorr√™ncias:")
print(f"O n√∫mero {alvo} aparece {ocorrencias} vezes.")
print("Tempo:", fim - inicio, "segundos")

inicio = time.time()
maior = maior_numero(lista)
fim = time.time()
print("\n3. Maior N√∫mero:")
print("Maior n√∫mero da lista:", maior)
print("Tempo:", fim - inicio, "segundos")

inicio = time.time()
menor = menor_numero(lista)
fim = time.time()
print("\n4. Menor N√∫mero:")
print("Menor n√∫mero da lista:", menor)
print("Tempo:", fim - inicio, "segundos")

lista_ordenada = sorted(lista)
inicio = time.time()
indice_binaria = busca_binaria(lista_ordenada, alvo)
fim = time.time()
print("\n5. Busca Bin√°ria:")
print("Lista ordenada:", lista_ordenada)
if indice_binaria != -1:
    print(f"Elemento encontrado no √≠ndice {indice_binaria}")
else:
    print("Elemento n√£o encontrado.")
print("Tempo:", fim - inicio, "segundos")

#N√≠vel 2 ‚Äì Aplica√ß√µes Pr√°ticas

import time
import random

def busca_nome_linear(lista, nome):
    for i in range(len(lista)):
        if lista[i].lower() == nome.lower():  
            return i
    return -1

def busca_binaria_recursiva(lista, alvo, inicio, fim):
    if inicio > fim:
        return -1
    meio = (inicio + fim) // 2
    if lista[meio] == alvo:
        return meio
    elif lista[meio] < alvo:
        return busca_binaria_recursiva(lista, alvo, meio + 1, fim)
    else:
        return busca_binaria_recursiva(lista, alvo, inicio, meio - 1)

def comparar_tempos():
    lista = sorted(random.sample(range(1, 2_000_000), 1_000_000))
    alvo = random.choice(lista)

    inicio = time.time()
    for i in range(len(lista)):
        if lista[i] == alvo:
            break
    fim = time.time()
    tempo_linear = fim - inicio

    inicio = time.time()
    busca_binaria_recursiva(lista, alvo, 0, len(lista) - 1)
    fim = time.time()
    tempo_binaria = fim - inicio

    print("\n8. Compara√ß√£o de Tempo (1 milh√£o de elementos):")
    print(f"‚Üí Tempo Busca Linear: {tempo_linear:.6f} segundos")
    print(f"‚Üí Tempo Busca Bin√°ria: {tempo_binaria:.6f} segundos")
    print("A busca bin√°ria √© muito mais eficiente em listas grandes!")

def primeira_ocorrencia(lista, alvo):
    inicio = 0
    fim = len(lista) - 1
    resultado = -1
    while inicio <= fim:
        meio = (inicio + fim) // 2
        if lista[meio] == alvo:
            resultado = meio
            fim = meio - 1  
        elif lista[meio] < alvo:
            inicio = meio + 1
        else:
            fim = meio - 1
    return resultado


def intervalo_indices(lista, alvo):
    primeiro = primeira_ocorrencia(lista, alvo)
    if primeiro == -1:
        return (-1, -1)

    inicio = primeiro
    fim = len(lista) - 1
    ultimo = primeiro
    while inicio <= fim:
        meio = (inicio + fim) // 2
        if lista[meio] == alvo:
            ultimo = meio
            inicio = meio + 1
        elif lista[meio] < alvo:
            inicio = meio + 1
        else:
            fim = meio - 1
    return (primeiro, ultimo)

nomes = []
print("Digite nomes (ou 'fim' para parar):")
while True:
    nome = input("> ")
    if nome.lower() == "fim":
        break
    nomes.append(nome)

print("\nLista de nomes:", nomes)
alvo_nome = input("Digite o nome que deseja buscar: ")
indice = busca_nome_linear(nomes, alvo_nome)
if indice != -1:
    print(f"Nome encontrado no √≠ndice {indice}")
else:
    print("Nome n√£o encontrado.")

lista_exemplo = sorted([10, 15, 20, 25, 30, 35, 40])
print("\n7. Busca Bin√°ria Recursiva")
print("Lista:", lista_exemplo)
alvo = 25
indice = busca_binaria_recursiva(lista_exemplo, alvo, 0, len(lista_exemplo) - 1)
if indice != -1:
    print(f"Elemento {alvo} encontrado no √≠ndice {indice}")
else:
    print("Elemento n√£o encontrado.")

comparar_tempos()

lista_repetidos = [1, 2, 2, 2, 3, 4, 4, 5]
print("\n9. Primeira Ocorr√™ncia")
print("Lista:", lista_repetidos)
alvo = 2
indice = primeira_ocorrencia(lista_repetidos, alvo)
print(f"Primeira ocorr√™ncia de {alvo}: √≠ndice {indice}")

print("\n10. Intervalo de √çndices")
inicio, fim = intervalo_indices(lista_repetidos, alvo)
print(f"O n√∫mero {alvo} aparece do √≠ndice {inicio} ao {fim}")

#N√≠vel 3 ‚Äì Desafios

import random
import time

def busca_pessoa_por_nome(pessoas, nome):
    for pessoa in pessoas:
        if pessoa["nome"].lower() == nome.lower():
            return pessoa
    return None


def jogo_adivinhe_numero():
    print("\n12. üéØ Jogo: Adivinhe o N√∫mero (1 a 100)")
    baixo = 1
    alto = 100
    tentativas = 0
    numero_secreto = random.randint(baixo, alto)
    print("(O computador j√° escolheu um n√∫mero entre 1 e 100!)")

    while True:
        palpite = (baixo + alto) // 2  
        tentativas += 1
        print(f"Tentativa {tentativas}: {palpite}")

        if palpite == numero_secreto:
            print(f"‚úÖ Acertou! O n√∫mero era {numero_secreto}.")
            print(f"Total de tentativas: {tentativas}")
            break
        elif palpite < numero_secreto:
            print("O n√∫mero secreto √© MAIOR!")
            baixo = palpite + 1
        else:
            print("O n√∫mero secreto √© MENOR!")
            alto = palpite - 1


def buscar_produtos_por_preco(produtos, preco_alvo):
    encontrados = []
    for produto in produtos:
        if produto["preco"] == preco_alvo:
            encontrados.append(produto)
    return encontrados


def meu_index(lista, valor):
    for i in range(len(lista)):
        if lista[i] == valor:
            return i
    raise ValueError(f"{valor} n√£o est√° na lista")


print("11. Busca em Lista de Dicion√°rios")
pessoas = [
    {"nome": "Ana", "idade": 25},
    {"nome": "Jo√£o", "idade": 30},
    {"nome": "Maria", "idade": 22},
    {"nome": "Carlos", "idade": 28}
]
nome_busca = "Jo√£o"
resultado = busca_pessoa_por_nome(pessoas, nome_busca)
if resultado:
    print(f"Pessoa encontrada: {resultado}")
else:
    print("Pessoa n√£o encontrada.")

jogo_adivinhe_numero()

print("\n13. Buscar Produtos por Pre√ßo")
produtos = [
    {"nome": "Notebook", "preco": 3500},
    {"nome": "Mouse", "preco": 80},
    {"nome": "Teclado", "preco": 150},
    {"nome": "Monitor", "preco": 150},
    {"nome": "Cadeira Gamer", "preco": 1200}
]
preco_alvo = 150
encontrados = buscar_produtos_por_preco(produtos, preco_alvo)
if encontrados:
    print(f"Produtos com pre√ßo R${preco_alvo}:")
    for p in encontrados:
        print(" -", p["nome"])
else:
    print("Nenhum produto com esse pre√ßo foi encontrado.")

print("\n14. Fun√ß√£o meu_index()")
lista_exemplo = ["ma√ß√£", "banana", "laranja", "uva"]
valor = "laranja"
try:
    indice = meu_index(lista_exemplo, valor)
    print(f"Valor '{valor}' encontrado no √≠ndice {indice}")
except ValueError as e:
    print(e)
